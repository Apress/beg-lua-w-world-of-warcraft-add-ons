<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/ ..\FrameXML\UI.xsd">
	<Button name="MyUnitFrameTemplate" virtual="true" movable="true" inherits="SecureUnitButtonTemplate">
		<Size>
			<AbsDimension x="96" y="32"/>
		</Size>
		<Layers>
			<Layer level="ARTWORK">
				<Texture name="$parentPortrait">
					<Size>
						<AbsDimension x="32" y="32"/>
					</Size>
					<Anchors>
						<Anchor point="LEFT"/>
					</Anchors>
				</Texture>
				<FontString name="$parentName" inherits="GameFontNormal">
					<Anchors>
						<Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="$parentPortrait"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<StatusBar name="$parentHealth" minValue="0" maxValue="1">
				<Size>
					<AbsDimension x="64" y="16"/>
				</Size>
				<Anchors>
					<Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT" relativeTo="$parentPortrait"/>
				</Anchors>
				<BarTexture file="Interface\TargetingFrame\UI-StatusBar"/>
			</StatusBar>
		</Frames>
		<Scripts>
			<OnDragStart>
				self:StartMoving()
			</OnDragStart>
			<OnDragStop>
				self:StopMovingOrSizing()
			</OnDragStop>
		</Scripts>
	</Button>
	
<Button name="MyPlayerFrame" parent="UIParent" inherits="MyUnitFrameTemplate">
   <Anchors>
      <Anchor point="RIGHT" relativePoint="CENTER"/>
   </Anchors>
   <Scripts>
      <OnLoad>
         self:RegisterForClicks("AnyUp")
         self:RegisterForDrag("LeftButton")
         self:RegisterEvent("UNIT_HEALTH")
         _G[self:GetName().."Name"]:SetText(UnitName("player"))
         SetPortraitTexture(_G[self:GetName().."Portrait"], "player")
         SecureUnitButton_OnLoad(self, "player", function()
            ToggleDropDownMenu(1, nil, PlayerFrameDropDown, self, 106, 27)
         end)
      </OnLoad>
      <OnEvent>
         local arg1 = ...
         if arg1 == "player" then
            _G[self:GetName().."Health"]:SetValue(
               UnitHealth(arg1)/UnitHealthMax(arg1)
            )
         end
      </OnEvent>
   </Scripts>
</Button>

	<Button name="MyTargetFrame" parent="UIParent" inherits="MyUnitFrameTemplate">
		<Anchors>
			<Anchor point="LEFT" relativePoint="CENTER"/>
		</Anchors>
		<Attributes>
			<Attribute name="unit" type="string" value="target"/>
		</Attributes>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("AnyUp")
				self:RegisterForDrag("LeftButton")
				self:RegisterEvent("UNIT_HEALTH")
				self:RegisterEvent("PLAYER_TARGET_CHANGED")
				SecureUnitButton_OnLoad(self, "target", function()
					ToggleDropDownMenu(1, nil, TargetFrameDropDown, self, 120, 10)
				end)
				RegisterUnitWatch(self)
			</OnLoad>
			<OnEvent>
				if event == "UNIT_HEALTH" then
					local arg1 = ...
					if arg1 == "target" then
						_G[self:GetName().."Health"]:SetValue(
							UnitHealth(arg1)/UnitHealthMax(arg1)
						)
					end
				elseif event == "PLAYER_TARGET_CHANGED" then
					_G[self:GetName().."Health"]:SetValue(
						UnitHealth("target")/UnitHealthMax("target")
					)
					SetPortraitTexture(_G[self:GetName().."Portrait"], "target")
					_G[self:GetName().."Name"]:SetText(UnitName("target"))
				end
			</OnEvent>
		</Scripts>
	</Button>
	
<!--	<Button name="SecureTestButton" parent="UIParent" text="Secure Button" inherits="SecureActionButtonTemplate,OptionsButtonTemplate">
		<Anchors>
			<Anchor point="CENTER"/>
		</Anchors>
		<Size>
			<AbsDimension x="128" y="24"/>
		</Size>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("AnyUp")
			</OnLoad>
		</Scripts>
	</Button>-->
</Ui>